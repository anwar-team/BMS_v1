#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ุณูุฑุจุช ุชุดุบูู ุณูู ูููุณุชุฎุฑุฌ ุงููุญุณู
Easy Runner for Enhanced Shamela Scraper
"""

import asyncio
import sys
import os
from pathlib import Path

# ุฅุถุงูุฉ ูุณุงุฑ ุงูุณูุฑุจุช ูููุณุงุฑุงุช
script_dir = Path(__file__).parent
sys.path.insert(0, str(script_dir))

from shamela_scraper_enhanced import scrape_book, scrape_multiple_books, EnhancedDatabaseManager, DB_CONFIG

def print_banner():
    """ุทุจุงุนุฉ ุดุนุงุฑ ุงูุณูุฑุจุช"""
    banner = """
โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
โ                    Shamela Enhanced Scraper                  โ
โ                   ุณูุฑุจุช ุงูุดุงููุฉ ุงููุญุณู                      โ
โ                                                              โ
โ  ูุทูุฑ ุฎุตูุตุงู ููุดุฑูุน BMS_v1 ูุน ุงูุชูุงูู ุงููุงูู ูุน Laravel   โ
โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
"""
    print(banner)

def test_database_connection():
    """ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช"""
    print("๐ ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช...")
    try:
        with EnhancedDatabaseManager(DB_CONFIG) as db:
            result = db.execute_query("SELECT 1 as test")
            if result and result[0]['test'] == 1:
                print("โ ุชู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช ุจูุฌุงุญ")
                return True
            else:
                print("โ ูุดู ูู ุงุฎุชุจุงุฑ ูุงุนุฏุฉ ุงูุจูุงูุงุช")
                return False
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช: {e}")
        return False

async def quick_test(book_id: str = "30151"):
    """ุงุฎุชุจุงุฑ ุณุฑูุน ููุณูุฑุจุช"""
    print(f"๐งช ุงุฎุชุจุงุฑ ุณุฑูุน ูููุชุงุจ {book_id}...")
    try:
        book = await scrape_book(book_id, save_to_db=False)
        print(f"โ ุชู ุงุณุชุฎุฑุงุฌ ุงููุชุงุจ ุจูุฌุงุญ:")
        print(f"   ๐ ุงูุนููุงู: {book.title}")
        print(f"   ๐ค ุงููุคูู: {book.authors[0].full_name if book.authors else 'ุบูุฑ ูุญุฏุฏ'}")
        print(f"   ๐ ุนุฏุฏ ุงูุตูุญุงุช: {book.pages_count}")
        print(f"   ๐ ุนุฏุฏ ุงูุฃุฌุฒุงุก: {book.volumes_count}")
        print(f"   ๐ ุนุฏุฏ ุงููุตูู: {len(book.chapters)}")
        print(f"   ๐พ ุงูุตูุญุงุช ุงููุณุชุฎุฑุฌุฉ: {len(book.pages)}")
        
        if book.card_info and book.card_info.has_original_pagination:
            print("   โจ ุงููุชุงุจ ูุญุชูู ุนูู ุชุฑููู ููุงูู ูููุทุจูุน")
        
        return True
    except Exception as e:
        print(f"โ ูุดู ุงูุงุฎุชุจุงุฑ: {e}")
        return False

def get_user_choice():
    """ุงูุญุตูู ุนูู ุงุฎุชูุงุฑ ุงููุณุชุฎุฏู"""
    print("\n๐ ุงูุฎูุงุฑุงุช ุงููุชุงุญุฉ:")
    print("1. ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช")
    print("2. ุงุฎุชุจุงุฑ ุณุฑูุน (ูุชุงุจ ูุงุญุฏ ุจุฏูู ุญูุธ)")
    print("3. ุงุณุชุฎุฑุงุฌ ูุชุงุจ ูุงุญุฏ ูุญูุธู")
    print("4. ุงุณุชุฎุฑุงุฌ ุนุฏุฉ ูุชุจ")
    print("5. ุฎุฑูุฌ")
    
    while True:
        try:
            choice = input("\n๐ ุงุฎุชุฑ ุฑูู ุงูุฎูุงุฑ: ").strip()
            if choice in ['1', '2', '3', '4', '5']:
                return int(choice)
            else:
                print("โ ูุฑุฌู ุงุฎุชูุงุฑ ุฑูู ุตุญูุญ ูู 1 ุฅูู 5")
        except KeyboardInterrupt:
            print("\n๐ ุชู ุฅูุบุงุก ุงูุนูููุฉ")
            sys.exit(0)

async def extract_single_book():
    """ุงุณุชุฎุฑุงุฌ ูุชุงุจ ูุงุญุฏ"""
    book_id = input("๐ ุฃุฏุฎู ูุนุฑู ุงููุชุงุจ: ").strip()
    if not book_id:
        print("โ ูุฌุจ ุฅุฏุฎุงู ูุนุฑู ุงููุชุงุจ")
        return
    
    save_choice = input("๐พ ูู ุชุฑูุฏ ุญูุธ ุงููุชุงุจ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุชุ (y/n): ").strip().lower()
    save_to_db = save_choice in ['y', 'yes', 'ูุนู', 'ู']
    
    print(f"๐ ุจุฏุก ุงุณุชุฎุฑุงุฌ ุงููุชุงุจ {book_id}...")
    try:
        book = await scrape_book(book_id, save_to_db)
        print(f"โ ุชู ุงุณุชุฎุฑุงุฌ ุงููุชุงุจ ุจูุฌุงุญ!")
        print(f"   ๐ ุงูุนููุงู: {book.title}")
        print(f"   ๐พ ุงูุตูุญุงุช ุงููุณุชุฎุฑุฌุฉ: {len(book.pages)}")
        
        if save_to_db:
            print("   ๐พ ุชู ุญูุธ ุงููุชุงุจ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช")
        
    except Exception as e:
        print(f"โ ูุดู ูู ุงุณุชุฎุฑุงุฌ ุงููุชุงุจ: {e}")

async def extract_multiple_books():
    """ุงุณุชุฎุฑุงุฌ ุนุฏุฉ ูุชุจ"""
    print("๐ ุฃุฏุฎู ูุนุฑูุงุช ุงููุชุจ (ููุตููุฉ ุจูุณุงูุงุช ุฃู ููุงุตู):")
    book_ids_input = input("ูุนุฑูุงุช ุงููุชุจ: ").strip()
    
    if not book_ids_input:
        print("โ ูุฌุจ ุฅุฏุฎุงู ูุนุฑูุงุช ุงููุชุจ")
        return
    
    # ุชุญููู ูุนุฑูุงุช ุงููุชุจ
    book_ids = []
    for book_id in book_ids_input.replace(',', ' ').split():
        book_id = book_id.strip()
        if book_id:
            book_ids.append(book_id)
    
    if not book_ids:
        print("โ ูู ูุชู ุงูุนุซูุฑ ุนูู ูุนุฑูุงุช ุตุญูุญุฉ")
        return
    
    save_choice = input("๐พ ูู ุชุฑูุฏ ุญูุธ ุงููุชุจ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุชุ (y/n): ").strip().lower()
    save_to_db = save_choice in ['y', 'yes', 'ูุนู', 'ู']
    
    print(f"๐ ุจุฏุก ุงุณุชุฎุฑุงุฌ {len(book_ids)} ูุชุงุจ...")
    try:
        books = await scrape_multiple_books(book_ids, save_to_db)
        print(f"โ ุชู ุงุณุชุฎุฑุงุฌ {len(books)} ูุชุงุจ ูู ุฃุตู {len(book_ids)}")
        
        for book in books:
            print(f"   ๐ {book.title} - {len(book.pages)} ุตูุญุฉ")
        
        if save_to_db:
            print("   ๐พ ุชู ุญูุธ ุฌููุน ุงููุชุจ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช")
        
    except Exception as e:
        print(f"โ ูุดู ูู ุงุณุชุฎุฑุงุฌ ุงููุชุจ: {e}")

async def main():
    """ุงููุธููุฉ ุงูุฑุฆูุณูุฉ"""
    print_banner()
    
    while True:
        choice = get_user_choice()
        
        if choice == 1:
            test_database_connection()
        
        elif choice == 2:
            await quick_test()
        
        elif choice == 3:
            await extract_single_book()
        
        elif choice == 4:
            await extract_multiple_books()
        
        elif choice == 5:
            print("๐ ุดูุฑุงู ูุงุณุชุฎุฏุงู ุงูุณูุฑุจุช!")
            break
        
        print("\n" + "="*60)

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\n๐ ุชู ุฅููุงุก ุงูุจุฑูุงูุฌ")
    except Exception as e:
        print(f"โ ุฎุทุฃ ุบูุฑ ูุชููุน: {e}")