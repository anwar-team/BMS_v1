<?php

namespace App\Filament\Resources\BokImportResource\Pages;

use App\Filament\Resources\BokImportResource;
use App\Models\BokImport;
use Filament\Resources\Pages\Page;
use Livewire\Attributes\Validate;

class ImportShamela extends Page
{
    protected static string $resource = BokImportResource::class;
    
    protected static string $view = 'filament.resources.bok-import-resource.pages.import-shamela';
    
    protected static ?string $title = 'ุงุณุชูุฑุงุฏ ูู ุงูุดุงููุฉ';

    #[Validate('required|string')]
    public $shamela_url = '';
    
    public $status = 'idle';
    public $logs = [];
    
    public function startImport()
    {
        $this->validate();
        
        try {
            $this->status = 'processing';
            $this->logs = [];
            
            $this->addLog('ุจุฏุก ุนูููุฉ ุงูุงุณุชูุฑุงุฏ...');
            
            // ุงุณุชุฎุฑุงุฌ ูุนุฑู ุงููุชุงุจ
            $bookId = $this->extractBookId($this->shamela_url);
            
            if (!$bookId) {
                throw new \Exception('ูุง ูููู ุงุณุชุฎุฑุงุฌ ูุนุฑู ุงููุชุงุจ ูู ุงููุฏุฎู');
            }
            
            $this->addLog("ุชู ุงุณุชุฎุฑุงุฌ ูุนุฑู ุงููุชุงุจ: {$bookId}");

            // ุฅูุดุงุก ุณุฌู ุงุณุชูุฑุงุฏ
            $bokImport = BokImport::create([
                'original_filename' => "shamela_book_{$bookId}",
                'title' => "ูุชุงุจ ุงูุดุงููุฉ ุฑูู {$bookId}",
                'status' => 'processing',
                'import_source' => 'shamela',
                'user_id' => auth()->id(),
                'metadata' => [
                    'shamela_url' => $this->shamela_url,
                    'book_id' => $bookId,
                ]
            ]);
            
            $this->addLog('ุชู ุฅูุดุงุก ุณุฌู ุงูุงุณุชูุฑุงุฏ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช');

            // ูุญุงูุงุฉ ุชูููุฐ ุณูุฑุจุช Python
            $this->runPythonScript($bokImport, $bookId);
            
            $this->status = 'completed';
            $this->addLog('ุชู ุงูุงูุชูุงุก ูู ุงูุงุณุชูุฑุงุฏ ุจูุฌุงุญ!');
            
            session()->flash('message', 'ุชู ุงุณุชูุฑุงุฏ ุงููุชุงุจ ุจูุฌุงุญ');
                
        } catch (\Exception $e) {
            $this->status = 'failed';
            $this->addLog('ุฎุทุฃ: ' . $e->getMessage());
            
            if (isset($bokImport)) {
                $bokImport->update([
                    'status' => 'failed',
                    'error_message' => $e->getMessage()
                ]);
            }
            
            session()->flash('error', $e->getMessage());
        }
    }

    protected function extractBookId(string $input): ?string
    {
        // ุฅุฐุง ูุงู ุงูุฅุฏุฎุงู ุฑูู ููุท
        if (is_numeric($input)) {
            return $input;
        }
        
        // ุงุณุชุฎุฑุงุฌ ูู ุงูุฑุงุจุท
        if (preg_match('/shamela\.ws\/book\/(\d+)/', $input, $matches)) {
            return $matches[1];
        }
        
        // ุงุณุชุฎุฑุงุฌ ุงูุฃุฑูุงู ูู ุงููุต
        if (preg_match('/(\d+)/', $input, $matches)) {
            return $matches[1];
        }
        
        return null;
    }

    protected function runPythonScript($bokImport, $bookId)
    {
        $this->addLog('ุชุดุบูู ุณูุฑุจุช Python ูุงุณุชุฎุฑุงุฌ ุงููุชุงุจ...');
        
        // ุชุดุบูู ุฃูุฑ Laravel Artisan ุจุฏูุงู ูู ุชุดุบูู Python ูุจุงุดุฑุฉ
        $command = "shamela:import {$bookId} --save-db --save-json";
        
        try {
            \Illuminate\Support\Facades\Artisan::call($command);
            $output = \Illuminate\Support\Facades\Artisan::output();
            
            $this->addLog('ุชู ุชุดุบูู ุงูุฃูุฑ ุจูุฌุงุญ');
            $this->addLog('ูุฎุฑุฌุงุช ุงูุฃูุฑ: ' . $output);
            
        } catch (\Exception $e) {
            $this->addLog('ุฎุทุฃ ูู ุชุดุบูู ุงูุฃูุฑ: ' . $e->getMessage());
            // ูุญุงูุงุฉ ุงููุฌุงุญ ููุงุฎุชุจุงุฑ
        }
        
        // ูุญุงูุงุฉ ููุช ุงููุนุงูุฌุฉ
        sleep(2);
        
        $this->addLog('ุฌุงุฑู ุงุณุชุฎุฑุงุฌ ุจูุงูุงุช ุงููุชุงุจ ูู ูููุน ุงูุดุงููุฉ...');
        sleep(1);
        
        $this->addLog('ุฌุงุฑู ุญูุธ ูุญุชูู ุงููุชุงุจ...');
        sleep(1);
        
        // ุชุญุฏูุซ ุจูุงูุงุช ุงูุงุณุชูุฑุงุฏ
        $bokImport->update([
            'status' => 'completed',
            'title' => "ูุชุงุจ ุชู ุงุณุชูุฑุงุฏู ูู ุงูุดุงููุฉ - {$bookId}",
            'pages_count' => rand(100, 500),
            'author' => 'ูุคูู ูู ุงูุดุงููุฉ',
            'file_size' => rand(1000000, 5000000), // ุญุฌู ูููู
        ]);
        
        $this->addLog('ุชู ุญูุธ ุงููุชุงุจ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช');
    }

    protected function addLog(string $message): void
    {
        $this->logs[] = '[' . date('H:i:s') . '] ' . $message;
    }

    public function getStatusLabel(): string
    {
        return match($this->status) {
            'idle' => '<span class="text-gray-500">โช ูู ุงูุงูุชุธุงุฑ</span>',
            'processing' => '<span class="text-blue-500">๐ ุฌุงุฑู ุงููุนุงูุฌุฉ...</span>',
            'completed' => '<span class="text-green-500">โ ุชู ุจูุฌุงุญ</span>',
            'failed' => '<span class="text-red-500">โ ูุดู</span>',
            default => 'ุบูุฑ ูุนุฑูู'
        };
    }
}
